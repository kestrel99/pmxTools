[{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"specifying-model-parameters","dir":"Articles","previous_headings":"","what":"Specifying model parameters","title":"Drawing PK curves with pmxTools","text":"Models take dose, time PK parameters inputs. Names PK parameters, especially volumes intercompartmental clearances, vary model type.","code":""},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"one-compartment-single-dose","dir":"Articles","previous_headings":"","what":"One-compartment, single dose","title":"Drawing PK curves with pmxTools","text":"Available functions include: example -","code":"library(ggplot2)  t <- seq(0, 24, by=0.1)  df1 <- data.frame(t = t,                   Cp1 = calc_sd_1cmt_linear_bolus(t = t, dose = 600, CL = 5, V = 20),                   Cp2 = calc_sd_1cmt_linear_infusion(t = t, dose = 600, CL = 5, V = 20, tinf=2),                   Cp3 = calc_sd_1cmt_linear_oral_0(t = t, dose = 600, CL = 5, V = 20, dur=2),                   Cp4 = calc_sd_1cmt_linear_oral_0_lag(t = t, dose = 600, CL = 5, V = 20, dur=2, tlag=1),                   Cp5 = calc_sd_1cmt_linear_oral_1(t = t, dose = 600, CL = 5, V = 20, ka=1.5),                   Cp6 = calc_sd_1cmt_linear_oral_1_lag(t = t, dose = 600, CL = 5, V = 20, ka=1.5, tlag=1))  p1.1 <- ggplot(df1, aes(t, Cp1)) +   geom_line() +   labs(title=\"Bolus dose\")  p1.2 <- ggplot(df1, aes(t, Cp2)) +   geom_line() +   labs(title=\"Infusion\")  p1.3 <- ggplot(df1, aes(t, Cp3)) +   geom_line() +   labs(title=\"Zero-order oral\")  p1.4 <- ggplot(df1, aes(t, Cp4)) +   geom_line() +   labs(title=\"Zero-order oral with lag time\")  p1.5 <- ggplot(df1, aes(t, Cp5)) +   geom_line() +   labs(title=\"First-order oral\")  p1.6 <- ggplot(df1, aes(t, Cp6)) +   geom_line() +   labs(title=\"First-order oral with lag time\")  p1.1 + p1.2 + p1.3 + p1.4 + p1.5 + p1.6 + plot_layout(nrow=3)"},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"one-compartment-steady-state","dir":"Articles","previous_headings":"","what":"One-compartment, steady state","title":"Drawing PK curves with pmxTools","text":"Available functions include: example -","code":"t <- seq(0, 24, by=0.1)  df1ss <- data.frame(t = t,                   Cp1 = calc_ss_1cmt_linear_bolus(t = t, tau = 24, dose = 600, CL = 1, V = 20),                   Cp2 = calc_ss_1cmt_linear_infusion(t = t, tau = 24, dose = 600, CL = 1, V = 20, tinf=2),                   Cp3 = calc_ss_1cmt_linear_oral_0(t = t, tau = 24, dose = 600, CL = 1, V = 20, dur=2),                   Cp4 = calc_ss_1cmt_linear_oral_0_lag(t = t, tau = 24, dose = 600, CL = 1, V = 20, dur=2, tlag=1.5),                   Cp5 = calc_ss_1cmt_linear_oral_1(t = t, tau = 24, dose = 600, CL = 1, V = 20, ka=1.5),                   Cp6 = calc_ss_1cmt_linear_oral_1_lag(t = t, tau = 24, dose = 600, CL = 1, V = 20, ka=1.5, tlag=1.5))  p1.1ss <- ggplot(df1ss, aes(t, Cp1)) +   geom_line() +   labs(title=\"Bolus dose\")  p1.2ss <- ggplot(df1ss, aes(t, Cp2)) +   geom_line() +   labs(title=\"Infusion\")  p1.3ss <- ggplot(df1ss, aes(t, Cp3)) +   geom_line() +   labs(title=\"Zero-order oral\")  p1.4ss <- ggplot(df1ss, aes(t, Cp4)) +   geom_line() +   labs(title=\"Zero-order oral with lag time\")  p1.5ss <- ggplot(df1ss, aes(t, Cp5)) +   geom_line() +   labs(title=\"First-order oral\")  p1.6ss <- ggplot(df1ss, aes(t, Cp6)) +   geom_line() +   labs(title=\"First-order oral with lag time\")  p1.1ss + p1.2ss + p1.3ss + p1.4ss + p1.5ss + p1.6ss + plot_layout(nrow=3)"},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"two-compartment-single-dose","dir":"Articles","previous_headings":"","what":"Two-compartment, single dose","title":"Drawing PK curves with pmxTools","text":"Available functions include: example -","code":"t <- seq(0, 24, by=0.1)  df2 <- data.frame(t = t,                   Cp1 = calc_sd_2cmt_linear_bolus(t = t, dose = 600, CL = 5, V1 = 20, V2 = 80, Q = 1),                   Cp2 = calc_sd_2cmt_linear_infusion(t = t, dose = 600, CL = 5, V1 = 20, V2 = 80, Q = 1, tinf=2),                   Cp3 = calc_sd_2cmt_linear_oral_0(t = t, dose = 600, CL = 5, V1 = 20, V2 = 80, Q = 1, dur=2),                   Cp4 = calc_sd_2cmt_linear_oral_0_lag(t = t, dose = 600, CL = 5, V1 = 20, V2 = 80, Q = 1, dur=2, tlag=1),                   Cp5 = calc_sd_2cmt_linear_oral_1(t = t, dose = 600, CL = 5, V1 = 20, V2 = 80, Q = 1, ka=1.5),                   Cp6 = calc_sd_2cmt_linear_oral_1_lag(t = t, dose = 600, CL = 5, V1 = 20, V2 = 80, Q = 1, ka=1.5, tlag=1))  p2.1 <- ggplot(df2, aes(t, Cp1)) +   geom_line() +   labs(title=\"Bolus dose\")  p2.2 <- ggplot(df2, aes(t, Cp2)) +   geom_line() +   labs(title=\"Infusion\")  p2.3 <- ggplot(df2, aes(t, Cp3)) +   geom_line() +   labs(title=\"Zero-order oral\")  p2.4 <- ggplot(df2, aes(t, Cp4)) +   geom_line() +   labs(title=\"Zero-order oral with lag time\")  p2.5 <- ggplot(df2, aes(t, Cp5)) +   geom_line() +   labs(title=\"First-order oral\")  p2.6 <- ggplot(df2, aes(t, Cp6)) +   geom_line() +   labs(title=\"First-order oral with lag time\")  p2.1 + p2.2 + p2.3 + p2.4 + p2.5 + p2.6 + plot_layout(nrow=3)"},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"two-compartment-steady-state","dir":"Articles","previous_headings":"","what":"Two-compartment, steady state","title":"Drawing PK curves with pmxTools","text":"Available functions include: example -","code":"t <- seq(0, 24, by=0.1)  df2ss <- data.frame(t = t,                   Cp1 = calc_ss_2cmt_linear_bolus(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 80, Q = 0.25),                   Cp2 = calc_ss_2cmt_linear_infusion(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 80, Q = 0.25, tinf=2),                   Cp3 = calc_ss_2cmt_linear_oral_0(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 80, Q = 0.25, dur=2),                   Cp4 = calc_ss_2cmt_linear_oral_0_lag(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 80, Q = 0.25, dur=2, tlag=1.5),                   Cp5 = calc_ss_2cmt_linear_oral_1(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 80, Q = 0.25, ka=1.5),                   Cp6 = calc_ss_2cmt_linear_oral_1_lag(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 80, Q = 0.25, ka=1.5, tlag=1.5))  p2.1ss <- ggplot(df2ss, aes(t, Cp1)) +   geom_line() +   labs(title=\"Bolus dose\")  p2.2ss <- ggplot(df2ss, aes(t, Cp2)) +   geom_line() +   labs(title=\"Infusion\")  p2.3ss <- ggplot(df2ss, aes(t, Cp3)) +   geom_line() +   labs(title=\"Zero-order oral\")  p2.4ss <- ggplot(df2ss, aes(t, Cp4)) +   geom_line() +   labs(title=\"Zero-order oral with lag time\")  p2.5ss <- ggplot(df2ss, aes(t, Cp5)) +   geom_line() +   labs(title=\"First-order oral\")  p2.6ss <- ggplot(df2ss, aes(t, Cp6)) +   geom_line() +   labs(title=\"First-order oral with lag time\")  p2.1ss + p2.2ss + p2.3ss + p2.4ss + p2.5ss + p2.6ss + plot_layout(nrow=3)"},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"three-compartment-single-dose","dir":"Articles","previous_headings":"","what":"Three-compartment, single dose","title":"Drawing PK curves with pmxTools","text":"Available functions include: example -","code":"t <- seq(0, 24, by=0.1)  df3 <- data.frame(t = t,                   Cp1 = calc_sd_3cmt_linear_bolus(t = t, CL = 3.5, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 600),                   Cp2 = calc_sd_3cmt_linear_infusion(t = t, CL = 3.5, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 600, tinf=2),                   Cp3 = calc_sd_3cmt_linear_oral_0(t = t, CL = 3.5, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 600, dur=2),                   Cp4 = calc_sd_3cmt_linear_oral_0_lag(t = t, CL = 3.5, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 600, dur=2, tlag=1),                   Cp5 = calc_sd_3cmt_linear_oral_1(t = t, CL = 3.5, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 600, ka=1.5),                   Cp6 = calc_sd_3cmt_linear_oral_1_lag(t = t, CL = 3.5, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 600, ka=1.5, tlag=1))  p3.1 <- ggplot(df3, aes(t, Cp1)) +   geom_line() +   labs(title=\"Bolus dose\")  p3.2 <- ggplot(df3, aes(t, Cp2)) +   geom_line() +   labs(title=\"Infusion\")  p3.3 <- ggplot(df3, aes(t, Cp3)) +   geom_line() +   labs(title=\"Zero-order oral\")  p3.4 <- ggplot(df3, aes(t, Cp4)) +   geom_line() +   labs(title=\"Zero-order oral with lag time\")  p3.5 <- ggplot(df3, aes(t, Cp5)) +   geom_line() +   labs(title=\"First-order oral\")  p3.6 <- ggplot(df3, aes(t, Cp6)) +   geom_line() +   labs(title=\"First-order oral with lag time\")  p3.1 + p3.2 + p3.3 + p3.4 + p3.5 + p3.6  + plot_layout(nrow=3)"},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"three-compartment-steady-state","dir":"Articles","previous_headings":"","what":"Three-compartment, steady state","title":"Drawing PK curves with pmxTools","text":"Available functions include: example -","code":"t <- seq(0, 24, by=0.1)  df3ss <- data.frame(t = t,                   Cp1 = calc_ss_3cmt_linear_bolus(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05),                   Cp2 = calc_ss_3cmt_linear_infusion(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, tinf=2),                   Cp3 = calc_ss_3cmt_linear_oral_0(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dur=2),                   Cp4 = calc_ss_3cmt_linear_oral_0_lag(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, dur=2, tlag=1.5),                   Cp5 = calc_ss_3cmt_linear_oral_1(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, ka=1.5),                   Cp6 = calc_ss_3cmt_linear_oral_1_lag(tad = t, tau = 24, dose = 600, CL = 1, V1 = 20, V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, ka=1.5, tlag=1.5))  p3.1ss <- ggplot(df3ss, aes(t, Cp1)) +   geom_line() +   labs(title=\"Bolus dose\")  p3.2ss <- ggplot(df3ss, aes(t, Cp2)) +   geom_line() +   labs(title=\"Infusion\")  p3.3ss <- ggplot(df3ss, aes(t, Cp3)) +   geom_line() +   labs(title=\"Zero-order oral\")  p3.4ss <- ggplot(df3ss, aes(t, Cp4)) +   geom_line() +   labs(title=\"Zero-order oral with lag time\")  p3.5ss <- ggplot(df3ss, aes(t, Cp5)) +   geom_line() +   labs(title=\"First-order oral\")  p3.6ss <- ggplot(df3ss, aes(t, Cp6)) +   geom_line() +   labs(title=\"First-order oral with lag time\")  p3.1ss + p3.2ss + p3.3ss + p3.4ss + p3.5ss + p3.6ss  + plot_layout(nrow=3)"},{"path":"https://kestrel99.github.io/pmxTools/articles/pk-curves.html","id":"multiple-dosing","dir":"Articles","previous_headings":"","what":"Multiple dosing","title":"Drawing PK curves with pmxTools","text":"able display single-dose steady state curves various commonly-seen systems well often useful show concentration-time curve demonstrates accumulation time steady state. pk_curve() function makes straightforward using principle superposition.","code":"dfcurve1 <- pk_curve(t=seq(0,168,by=0.1), model=\"3cmt_oral\", ii=24, addl=12,                      params=list(CL=1.5, V1=25, V2=2, V3=5, Q2=0.5, Q3=0.25, ka=1))  ggplot(dfcurve1, aes(t, cp)) +   geom_line()"},{"path":"https://kestrel99.github.io/pmxTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justin Wilkins. Author, maintainer. Bill Denney. Author. Rik Schoemaker. Author. Satyaprakash Nayak. Contributor. Leonid Gibiansky. Contributor. Andrew Hooker. Contributor. E. Niclas Jonsson. Contributor. Mats O. Karlsson. Contributor. John Johnson. Contributor.","code":""},{"path":"https://kestrel99.github.io/pmxTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wilkins J, Denney B, Schoemaker R (2025). pmxTools: Pharmacometric Pharmacokinetic Toolkit. R package version 1.5, https://github.com/kestrel99/pmxTools.","code":"@Manual{,   title = {pmxTools: Pharmacometric and Pharmacokinetic Toolkit},   author = {Justin Wilkins and Bill Denney and Rik Schoemaker},   year = {2025},   note = {R package version 1.5},   url = {https://github.com/kestrel99/pmxTools}, }"},{"path":"https://kestrel99.github.io/pmxTools/index.html","id":"pmxtools","dir":"","previous_headings":"","what":"Pharmacometric and Pharmacokinetic Toolkit","title":"Pharmacometric and Pharmacokinetic Toolkit","text":"Pharmacometric Tools Modeling & Simulation  Developed Justin Wilkins, Bill Denney Rik Schoemaker, contributions host others. Pharmacometric tools common data analytical tasks; closed-form solutions calculating concentrations given times dosing based compartmental PK models (1-compartment, 2-compartment 3-compartment, covering infusions, zero- first-order absorption, lag times, single doses steady state, per Bertrand & Mentre (2008) http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf); parametric simulation NONMEM-generated parameter estimates output; parsing, tabulating plotting results generated Perl-speaks-NONMEM (PsN). install: {r} devtools::install_github(\"kestrel99/pmxTools\") download directly CRAN.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/blq_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","title":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","text":"lloq provided, estimated data minimum value zero.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/blq_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","text":"","code":"blq_trans(lloq, x, multiplier = 0.5, lloq_text)  blq_log_trans(lloq, x, multiplier = 0.5, base = 10, lloq_text)"},{"path":"https://kestrel99.github.io/pmxTools/reference/blq_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","text":"lloq value lower limit quantification numeric scalar x (used lloq missing), data lloq estimation. multiplier data < lloq, replaced lloq*multiplier display. lloq_text text use axis indicate values <   lloq.  automatically set paste0(\"<\", lloq) missing. base base logarithm","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/blq_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","text":"\"trans\" object based scales package BLQ data.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/blq_trans.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","text":"blq_log_trans(): Log-scale transformation BLQ","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/blq_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A transform for ggplot2 with data that may be below the lower limit of quantification — blq_trans","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(data=data.frame(x=1:10, y=1:10), aes(x=x, y=y)) +   geom_point()  ggplot(data=data.frame(x=1:10, y=1:10), aes(x=x, y=y)) +   geom_point() +   scale_x_continuous(trans=blq_trans(lloq=3))  ggplot(data=data.frame(x=1:10, y=1:10), aes(x=x, y=y)) +   geom_point() +   scale_x_continuous(trans=blq_log10_trans(lloq=3)) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/breaks_blq_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","title":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","text":"Breaks < lloq removed.  lowest break removed close lloq.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/breaks_blq_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","text":"","code":"breaks_blq_general(lloq, breakfun, trans = identity, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/breaks_blq_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","text":"lloq value lower limit quantification numeric scalar breakfun function used normal scale breaks lloq present. trans parameter translation function (typically either identity linear scale log log scale). ... passed breakfun(n=n, ...)","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/breaks_blq_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","text":"function calculating breaks arguments x n","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/breaks_blq_general.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","text":"ggplot2 scales.  usually used directly.  See blq_trans() blq_log10_trans() functions commonly used.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/breaks_blq_general.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate breaks for measurements below the limit of quantification — breaks_blq_general","text":"","code":"breaks_blq_general(lloq=3, breakfun=scales::breaks_extended)(1:100, n=5) #> [1]   3  25  50  75 100"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"Calculate derived pharmacokinetic parameters 1-, 2-, 3-compartment linear model.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"","code":"calc_derived(..., verbose = FALSE)  calc_derived_1cpt(   CL,   V = NULL,   V1 = NULL,   ka = NULL,   dur = NULL,   tlag = NULL,   tinf = NULL,   dose = NULL,   tau = NULL,   step = 0.1,   type = \"all\",   sigdig = 5 )  calc_derived_2cpt(   CL,   V1 = NULL,   V2,   Q2 = NULL,   V = NULL,   Q = NULL,   dur = NULL,   tinf = NULL,   ka = NULL,   tlag = NULL,   dose = NULL,   tau = NULL,   step = 0.1,   type = \"all\",   sigdig = 5 )  calc_derived_3cpt(   CL,   V1 = NULL,   V2,   V3,   Q2 = NULL,   Q3,   V = NULL,   Q = NULL,   ka = NULL,   dur = NULL,   tinf = NULL,   tlag = NULL,   dose = NULL,   tau = NULL,   step = 0.1,   type = \"all\",   sigdig = 5 )"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"... Passed calc_derived_*() functions. verbose calc_derived(), provide message indicating type model detected. CL Clearance (volume per time units, e.g. L/h) V1, V Central volume distribution (volume units, e.g. L).  Values synonyms; use one. ka Absorption rate (inverse time units, e.g. 1/h) dur Duration zero-order absorption (time units, e.g. h) tlag Absorption lag time (time units, e.g. h) tinf Duration infusion (time units, e.g. h) dose Dose (amount units, e.g. mg) tau Duration interdose interval (time units, e.g. h; defaults 24) step Time increment use estimating NCA parameters (time units, e.g. h; defaults 0.1) type Parameters return. Default \"\".  \"\", may vector names return value list. sigdig Number significant digits returned. Default 5. V2 First peripheral volume distribution (volume units, e.g. L) Q2, Q Intercompartmental clearance central first peripheral compartment (volume per time units, e.g. L/h).  Values synonyms; use one. V3 Second peripheral volume distribution (volume units, e.g. L) Q3 Intercompartmental clearance central second peripheral compartment (volume per time units, e.g. L/h)","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"Return list derived PK parameters 1-, 2-, 3-compartment linear model given provided clearances volumes based type. dose provided, estimated non-compartmental analysis (NCA) parameters provided well, based simulation single-dose (tau specified) steady-state time courses. Vss: Volume distribution steady state, \\(V_{ss}\\) (volume units, e.g. L); 1-, 2-, 3-compartment k10: First-order elimination rate, \\(k_{10}\\) (inverse time units, e.g. 1/h); 1-, 2-, 3-compartment k12: First-order rate transfer central first peripheral compartment, \\(k_{12}\\) (inverse time units, e.g. 1/h); 2- 3-compartment k21: First-order rate transfer first peripheral central compartment, \\(k_{21}\\) (inverse time units, e.g. 1/h); 2- 3-compartment k13: First-order rate transfer central second peripheral compartment, \\(k_{13}\\) (inverse time units, e.g. 1/h); 3-compartment k31: First-order rate transfer second peripheral central compartment,\\(k_{31}\\) (inverse time units, e.g. 1/h); 3-compartment thalf_alpha: \\(t_{1/2,\\alpha}\\) (time units, e.g. h); 1-, 2-, 3-compartment thalf_beta: \\(t_{1/2,\\beta}\\) (time units, e.g. h); 2- 3-compartment thalf_gamma: \\(t_{1/2,\\gamma}\\) (time units, e.g. h); 3-compartment alpha: \\(\\alpha\\); 1-, 2-, 3-compartment beta: \\(\\beta\\); 2- 3-compartment gamma: \\(\\beta\\); 3-compartment trueA: true ; 1-, 2-, 3-compartment trueB: true B; 2- 3-compartment trueC: true C; 3-compartment fracA: fractional ; 1-, 2-, 3-compartment fracB: fractional B; 2- 3-compartment fracC: fractional C; 3-compartment AUCinf: Area concentration-time curve infinity (single dose) AUCtau: Area concentration-time curve dosing interval steady state Cmax: Maximum concentration single dose Cmaxss: Maximum concentration dosing interval steady state Tmax: Time dose maximum concentration AUCinf_dose_normalized: Dose-normalized area concentration-time curve infinity (single dose) AUCtau_dose_normalized: Dose-normalized area concentration-time curve dosing interval steady state Cmax_dose_normalized: Dose-normalized maximum concentration single dose Cmaxss_dose_normalized: Dose-normalized maximum concentration dosing interval steady state step: Time increment used estimating NCA parameters. input parameters standardized names (dose, V1, V2, V3, CL, Q2, Q3) also returned list, provided, additional PK parameters ka, tlag, tinf dur also returned list.  inputs may scalars vectors.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"Shafer S. L. CONVERT.XLS Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"Justin Wilkins, justin.wilkins@occams.com Bill Denney, wdenney@humanpredictions.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_derived.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate derived pharmacokinetic parameters for a 1-, 2-, or 3-compartment linear model. — calc_derived","text":"","code":"params <- calc_derived(CL=29.4, V1=23.4, V2=114, V3=4614, Q2=270, Q3=73) params <- calc_derived_1cpt(CL=16, V=25) params <- calc_derived_2cpt(CL=16, V1=25, V2=50, Q=0.5) params <- calc_derived_3cpt(CL=29.4, V1=23.4, V2=114, V3=4614, Q2=270, Q3=73)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"Calculate C(t) 1-compartment linear model","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"","code":"calc_sd_1cmt(t, dose, dur = NULL, tinf = NULL, ...)  calc_sd_1cmt_linear_bolus(t, dose, ...)  calc_sd_1cmt_linear_oral_1_lag(t, dose, ...)  calc_sd_1cmt_linear_infusion(t, dose, tinf, ...)  calc_sd_1cmt_linear_oral_0(t, dose, dur, ...)  calc_sd_1cmt_linear_oral_1(t, dose, ...)  calc_sd_1cmt_linear_oral_0_lag(t, dose, dur, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"t Time dose (h) dose Dose dur Duration zero-order absorption (h) tinf Duration infusion (h) ... Passed calc_derived_1cpt()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"Concentration drug requested time (t) single dose, given provided set parameters variables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"calc_sd_1cmt_linear_bolus(): Calculate C(t) 1-compartment linear model single IV bolus dose calc_sd_1cmt_linear_oral_1_lag(): Calculate C(t) 1-compartment linear model first-order absorption single oral dose, lag time calc_sd_1cmt_linear_infusion(): Calculate C(t) 1-compartment linear model single IV infusion calc_sd_1cmt_linear_oral_0(): Calculate C(t) 1-compartment linear model zero-order absorption single oral dose calc_sd_1cmt_linear_oral_1(): Calculate C(t) 1-compartment linear model first-order absorption single oral dose calc_sd_1cmt_linear_oral_0_lag(): Calculate C(t) 1-compartment linear model zero-order absorption single oral dose, lag time","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"Bertrand J & Mentre F (2008). Mathematical Expressions Pharmacokinetic Pharmacodynamic Models implemented Monolix software. http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"Justin Wilkins, justin.wilkins@occams.com Bill Denney, wdenney@humanpredictions.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_1cmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate C(t) for a 1-compartment linear model — calc_sd_1cmt","text":"","code":"Ct <- calc_sd_1cmt_linear_bolus(t=0:24, CL=6, V=25, dose=600) Ct <- calc_sd_1cmt_linear_oral_1_lag(t=0:24, CL=6, V=25, ka=1.1, dose=600, tlag=2) Ct <- calc_sd_1cmt_linear_infusion(t=0:24, CL=6, V=25, dose=600, tinf=1) Ct <- calc_sd_1cmt_linear_oral_0(t=0:24, CL=6, V=25, dur=1.5, dose=600) Ct <- calc_sd_1cmt_linear_oral_1(t=0:24, CL=6, V=25, ka=1.1, dose=600) Ct <- calc_sd_1cmt_linear_oral_0_lag(t=0:24, CL=6, V=25, dur=1.5, dose=600, tlag=1.5)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"Calculate C(t) 2-compartment linear model","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"","code":"calc_sd_2cmt(t, dose, dur = NULL, tinf = NULL, ...)  calc_sd_2cmt_linear_bolus(t, dose, ...)  calc_sd_2cmt_linear_oral_1_lag(t, dose, ...)  calc_sd_2cmt_linear_infusion(t, dose, tinf, ...)  calc_sd_2cmt_linear_oral_0_lag(t, dose, dur, ...)  calc_sd_2cmt_linear_oral_1(t, dose, ...)  calc_sd_2cmt_linear_oral_0(t, dose, dur, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"t Time dose (h) dose Dose dur Duration zero-order absorption (h) tinf Duration infusion (h) ... Passed calc_derived_2cpt()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"Concentration drug requested time (t) single dose, given provided set parameters variables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"calc_sd_2cmt_linear_bolus(): Calculate C(t) 2-compartment linear model single IV bolus dose calc_sd_2cmt_linear_oral_1_lag(): Calculate C(t) 2-compartment linear model single first-order oral dose lag time calc_sd_2cmt_linear_infusion(): Calculate C(t) 2-compartment linear model single infusion calc_sd_2cmt_linear_oral_0_lag(): Calculate C(t) 2-compartment linear model single zero-order oral dose, lag time calc_sd_2cmt_linear_oral_1(): Calculate C(t) 2-compartment linear model single first-order oral dose calc_sd_2cmt_linear_oral_0(): Calculate C(t) 2-compartment linear model single zero-order oral dose","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"Bertrand J & Mentre F (2008). Mathematical Expressions Pharmacokinetic Pharmacodynamic Models implemented Monolix software. http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"Justin Wilkins, justin.wilkins@occams.com Bill Denney, wdenney@humanpredictions.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_2cmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate C(t) for a 2-compartment linear model — calc_sd_2cmt","text":"","code":"Ct <- calc_sd_2cmt_linear_bolus(t = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5, dose = 10) Ct <- calc_sd_2cmt_linear_oral_1_lag(t = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, ka = 1, tlag = 2) Ctrough <- calc_sd_2cmt_linear_infusion(t = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 10, tinf = 1) Ctrough <- calc_sd_2cmt_linear_oral_0_lag(t = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, dur = 1, tlag=2) Ct <- calc_sd_2cmt_linear_oral_1(t = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, ka = 1) Ct <- calc_sd_2cmt_linear_oral_0(t = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, dur = 1)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"Calculate C(t) 3-compartment linear model","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"","code":"calc_sd_3cmt(t, dose, dur = NULL, tinf = NULL, ...)  calc_sd_3cmt_linear_bolus(t, dose, ...)  calc_sd_3cmt_linear_oral_1_lag(t, dose, ...)  calc_sd_3cmt_linear_infusion(t, dose, tinf, ...)  calc_sd_3cmt_linear_oral_0(t, dose, dur, ...)  calc_sd_3cmt_linear_oral_0_lag(t, dose, dur, ...)  calc_sd_3cmt_linear_oral_1(t, dose, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"t Time dose (h) dose Dose dur Duration zero-order absorption (h) tinf Duration infusion (h) ... Passed calc_derived_3cpt()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"Concentration drug requested time (t) single dose, given provided set parameters variables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"calc_sd_3cmt_linear_bolus(): Calculate C(t) 3-compartment linear model single IV bolus dose calc_sd_3cmt_linear_oral_1_lag(): Calculate C(t) 3-compartment linear model single oral dose calc_sd_3cmt_linear_infusion(): Calculate C(t) 3-compartment linear model single IV infusion calc_sd_3cmt_linear_oral_0(): Calculate C(t) 3-compartment linear model single dose, zero-order absorption calc_sd_3cmt_linear_oral_0_lag(): Calculate C(t) 3-compartment linear model single dose, zero-order absorption lag time calc_sd_3cmt_linear_oral_1(): Calculate C(t) 3-compartment linear model single oral dose","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"Bertrand J & Mentre F (2008). Mathematical Expressions Pharmacokinetic Pharmacodynamic Models implemented Monolix software. http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"Justin Wilkins, justin.wilkins@occams.com Bill Denney, wdenney@humanpredictions.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_sd_3cmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate C(t) for a 3-compartment linear model — calc_sd_3cmt","text":"","code":"Ct <- calc_sd_3cmt_linear_bolus(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 100) Ct <- calc_sd_3cmt_linear_oral_1_lag(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, ka = 1, dose = 100, tlag = 1.5) Ct <- calc_sd_3cmt_linear_infusion(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 100, tinf=1) Ct <- calc_sd_3cmt_linear_oral_0(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dur = 1, dose = 100) Ct <- calc_sd_3cmt_linear_oral_0_lag(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dur = 1, dose = 100, tlag=1.5) Ct <- calc_sd_3cmt_linear_oral_1(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, ka = 1, dose = 100)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"Calculate C(t) 1-compartment linear model steady-state","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"","code":"calc_ss_1cmt(tad, tau, dose, dur = NULL, tinf = NULL, ...)  calc_ss_1cmt_linear_bolus(tad, tau, dose, ...)  calc_ss_1cmt_linear_infusion(tad, tau, dose, tinf, ...)  calc_ss_1cmt_linear_oral_0(tad, tau, dose, dur, ...)  calc_ss_1cmt_linear_oral_0_lag(tad, tau, dose, dur, ...)  calc_ss_1cmt_linear_oral_1_lag(tad, tau, dose, ...)  calc_ss_1cmt_linear_oral_1(tad, tau, dose, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"tad Time dose (h) tau Dosing interval (h) dose Dose dur Duration zero-order absorption (h) tinf Duration infusion (h) ... Passed calc_derived_1cpt()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"Concentration drug requested time (t) single dose, given provided set parameters variables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"calc_ss_1cmt_linear_bolus(): Calculate C(t) 1-compartment linear model IV bolus dosing steady state calc_ss_1cmt_linear_infusion(): Calculate C(t) 1-compartment linear model infusion steady state calc_ss_1cmt_linear_oral_0(): Calculate C(t) 1-compartment linear model zero-order oral absorption steady state calc_ss_1cmt_linear_oral_0_lag(): Calculate C(t) 1-compartment linear model zero-order oral absorption steady state, lag time calc_ss_1cmt_linear_oral_1_lag(): Calculate C(t) 1-compartment linear model first-order oral absorption steady state, lag time calc_ss_1cmt_linear_oral_1(): Calculate C(t) 1-compartment linear model first-order oral absorption steady state","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"Bertrand J & Mentre F (2008). Mathematical Expressions Pharmacokinetic Pharmacodynamic Models implemented Monolix software. http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"Justin Wilkins, justin.wilkins@occams.com Bill Denney, wdenney@humanpredictions.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_1cmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate C(t) for a 1-compartment linear model at steady-state — calc_ss_1cmt","text":"","code":"Ct <- calc_ss_1cmt_linear_bolus(t=0:24, CL=6, V=25, dose=600, tau=24) Ct <- calc_ss_1cmt_linear_infusion(tad=0:36, CL=2, V=25, dose=600, tinf=1, tau=24) Ct <- calc_ss_1cmt_linear_oral_0(tad=0:36, CL=2, V=25, dose=600, dur=1, tau=24) Ct <- calc_ss_1cmt_linear_oral_0_lag(tad=0:36, CL=2, V=25, dose=600, dur=1, tau=24, tlag=1.5) Ct <- calc_ss_1cmt_linear_oral_1_lag(tad=0:36, CL=2, V=25, dose=600,     ka=0.25, tlag=0.75, tau=24) Ct <- calc_ss_1cmt_linear_oral_1(tad=0:36, CL=2, V=25, dose=600, ka=0.25, tau=24)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"Calculate C(t) 2-compartment linear model steady-state","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"","code":"calc_ss_2cmt(tad, tau, dose, dur = NULL, tinf = NULL, ...)  calc_ss_2cmt_linear_bolus(tad, tau, dose, ...)  calc_ss_2cmt_linear_infusion(tad, tau, dose, tinf, ...)  calc_ss_2cmt_linear_oral_0(tad, tau, dose, dur, ...)  calc_ss_2cmt_linear_oral_1_lag(tad, tau, dose, ...)  calc_ss_2cmt_linear_oral_0_lag(tad, tau, dose, dur, ...)  calc_ss_2cmt_linear_oral_1(tad, tau, dose, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"tad Time dose (h) tau Dosing interval (h) dose Dose dur Duration zero-order absorption (h) tinf Duration infusion (h) ... Passed calc_derived_2cpt()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"Concentration drug requested time (t) steady-state, given provided set parameters variables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"calc_ss_2cmt_linear_bolus(): Calculate C(t) 2-compartment linear model IV bolus dosing steady-state calc_ss_2cmt_linear_infusion(): Calculate C(t) 2-compartment linear model infusion steady state calc_ss_2cmt_linear_oral_0(): Calculate C(t) 2-compartment linear model steady-state zero-order oral dosing calc_ss_2cmt_linear_oral_1_lag(): Calculate C(t) 2-compartment linear model steady-state first-order oral dosing calc_ss_2cmt_linear_oral_0_lag(): Calculate C(t) 2-compartment linear model steady-state zero-order oral dosing lag time calc_ss_2cmt_linear_oral_1(): Calculate C(t) 2-compartment linear model steady-state first-order oral dosing","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"Bertrand J & Mentre F (2008). Mathematical Expressions Pharmacokinetic Pharmacodynamic Models implemented Monolix software. http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_2cmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate C(t) for a 2-compartment linear model at steady-state — calc_ss_2cmt","text":"","code":"Ct <- calc_ss_2cmt_linear_bolus(tad = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 10, tau=24) Ct <- calc_ss_2cmt_linear_infusion(tad = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 10, tinf = 1, tau = 12) Ct <- calc_ss_2cmt_linear_oral_0(tad = 23, CL = 2.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, dur = 1, tau = 24) Ct <- calc_ss_2cmt_linear_oral_1_lag(tad = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, ka = 1, tau=24, tlag=2) Ct <- calc_ss_2cmt_linear_oral_0_lag(tad = 23, CL = 2.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, dur = 1, tau = 24, tlag=2) Ct <- calc_ss_2cmt_linear_oral_1(tad = 11.75, CL = 7.5, V1 = 20, V2 = 30, Q = 0.5,     dose = 1000, ka = 1, tau=24)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"Calculate C(t) 3-compartment linear model steady-state","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"","code":"calc_ss_3cmt(tad, tau, dose, dur = NULL, tinf = NULL, ...)  calc_ss_3cmt_linear_bolus(tad, tau, dose, ...)  calc_ss_3cmt_linear_oral_1_lag(tad, tau, dose, ...)  calc_ss_3cmt_linear_infusion(tad, tau, dose, tinf, ...)  calc_ss_3cmt_linear_oral_0(tad, tau, dose, dur, ...)  calc_ss_3cmt_linear_oral_0_lag(tad, tau, dose, dur, ...)  calc_ss_3cmt_linear_oral_1(tad, tau, dose, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"tad Time dose (h) tau Dosing interval (h) dose Dose dur Duration zero-order absorption (h) tinf Duration infusion (h) ... Passed calc_derived_3cpt()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"Concentration drug requested time (t) steady-state, given provided set parameters variables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"calc_ss_3cmt_linear_bolus(): Calculate C(t) 3-compartment linear model steady state IV bolus dosing calc_ss_3cmt_linear_oral_1_lag(): Calculate C(t) 3-compartment linear model steady-state first-order oral dosing lag time calc_ss_3cmt_linear_infusion(): Calculate C(t) 3-compartment linear model steady state IV infusions calc_ss_3cmt_linear_oral_0(): Calculate C(t) 3-compartment linear model steady state, zero-order absorption calc_ss_3cmt_linear_oral_0_lag(): Calculate C(t) 3-compartment linear model steady state, zero-order absorption lag time calc_ss_3cmt_linear_oral_1(): Calculate C(t) 3-compartment linear model steady-state first-order oral dosing","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"Bertrand J & Mentre F (2008). Mathematical Expressions Pharmacokinetic Pharmacodynamic Models implemented Monolix software. http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Lippincott Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/calc_ss_3cmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate C(t) for a 3-compartment linear model at steady-state — calc_ss_3cmt","text":"","code":"Ct <- calc_ss_3cmt_linear_bolus(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dose = 100, tau=24) Ctrough <- calc_ss_3cmt_linear_oral_1_lag(t = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, ka = 1, dose = 100, tau=24, tlag = 1.5) Ct <- calc_ss_3cmt_linear_infusion(tad = 11.75, CL = 2.5, V1 = 20, V2 = 50,     V3 = 100, Q2 = 0.5, Q3 = 0.05, dose = 1000, tinf=1, tau=24) Ct <- calc_ss_3cmt_linear_oral_0(tad = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dur = 1, dose = 100, tau = 24) Ct <- calc_ss_3cmt_linear_oral_0_lag(tad = 11.75, CL = 3.5, V1 = 20, V2 = 500,     V3 = 200, Q2 = 0.5, Q3 = 0.05, dur = 1, dose = 100, tau = 24, tlag = 1.5) Ct <- calc_ss_3cmt_linear_oral_1(tad = 11.75, CL = 3.5, V1 = 20,     V2 = 500, V3 = 200, Q2 = 0.5, Q3 = 0.05, ka = 1, dose = 100, tau = 24)"},{"path":"https://kestrel99.github.io/pmxTools/reference/count_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of NA values in a vector. — count_na","title":"Count the number of NA values in a vector. — count_na","text":"Count number NA values vector.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/count_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of NA values in a vector. — count_na","text":"","code":"count_na(x)"},{"path":"https://kestrel99.github.io/pmxTools/reference/count_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of NA values in a vector. — count_na","text":"x vector.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/count_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of NA values in a vector. — count_na","text":"integer containing number NA values input vector.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/count_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count the number of NA values in a vector. — count_na","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/count_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of NA values in a vector. — count_na","text":"","code":"if (FALSE) { # \\dontrun{  count_na(c(0,5,7,NA,3,3,NA)) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/dgr_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","title":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","text":"Generate summary table descriptive data every individual dataset suitable tabulation report.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/dgr_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","text":"","code":"dgr_table(   dat,   fields,   names,   cutoff = 7,   sig = 3,   by = NULL,   idvar = \"ID\",   navars = c(\"-99\", \"-999\"),   mtype = \"geomean\" )"},{"path":"https://kestrel99.github.io/pmxTools/reference/dgr_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","text":"dat input data frame, one row per unique individual. fields vector strings containing names fields included summary table. names vector strings containing descriptive names fields included summary table. cutoff integer defining maximum number unique values variable considered categorical. Fields number unique values considered continuous purposes summary table (defaults 7). sig number significant digits summary values (defaults 3). field use grouping (string). NULL (default), summary table contain columns unique value field, well column summarizing across fields. idvar field dataset identifying unique individual (defaults \"ID\"). navars vector containing values interpreted missing (defaults \"-99\" \"-999\"). NA values always considered missing. mtype type mean apply; geomean, geometric mean (default) mean, arithmetic mean.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/dgr_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","text":"data frame containing summary fields listed fields, individual dataset (dataset contain duplicated individuals), conditioned field . Continuous values summarized median, mean, range number missing values. Categorical values summarized count relative percentage.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/dgr_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/dgr_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a summary table of descriptive data for every individual in a dataset suitable for tabulation in a report. — dgr_table","text":"","code":"if (FALSE) { # \\dontrun{  count_na(c(0,5,7,NA,3,3,NA)) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/estimate_lloq.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the lower limit of quantification (LLOQ) from a vector — estimate_lloq","title":"Estimate the lower limit of quantification (LLOQ) from a vector — estimate_lloq","text":"Nonnegative values considered LLOQ. NA values ignored.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/estimate_lloq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the lower limit of quantification (LLOQ) from a vector — estimate_lloq","text":"","code":"estimate_lloq(x)"},{"path":"https://kestrel99.github.io/pmxTools/reference/estimate_lloq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the lower limit of quantification (LLOQ) from a vector — estimate_lloq","text":"x numeric vector use estimation LLOQ","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/estimate_lloq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the lower limit of quantification (LLOQ) from a vector — estimate_lloq","text":"lowest, nonzero value x.  NA zero, 1 returned, warning issued.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/estimate_lloq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the lower limit of quantification (LLOQ) from a vector — estimate_lloq","text":"","code":"estimate_lloq(c(NA, 0, 2, 5)) #> [1] 2"},{"path":"https://kestrel99.github.io/pmxTools/reference/fmt_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","title":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","text":"Format number correct number significant digits trailing zeroes.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/fmt_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","text":"","code":"fmt_signif(x, digits = 3)"},{"path":"https://kestrel99.github.io/pmxTools/reference/fmt_signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","text":"x vector numeric values. digits number significant digits values (defaults 3).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/fmt_signif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","text":"string containing properly-formatted number.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/fmt_signif.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/fmt_signif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a number with the correct number of significant digits and trailing zeroes. — fmt_signif","text":"","code":"if (FALSE) { # \\dontrun{  fmt_signif(c(36.44, 0.0002, 3336.7), digits=3) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/ftrans_blq_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward transformation for linear BLQ data — ftrans_blq_linear","title":"Forward transformation for linear BLQ data — ftrans_blq_linear","text":"ggplot2 scales.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/ftrans_blq_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward transformation for linear BLQ data — ftrans_blq_linear","text":"","code":"ftrans_blq_linear(lloq, multiplier)  ftrans_blq_log(lloq, multiplier, base = 10)"},{"path":"https://kestrel99.github.io/pmxTools/reference/ftrans_blq_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forward transformation for linear BLQ data — ftrans_blq_linear","text":"lloq value lower limit quantification numeric scalar multiplier data < lloq, replaced lloq*multiplier display. base base logarithm","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/ftrans_blq_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forward transformation for linear BLQ data — ftrans_blq_linear","text":"function x replaces x < lloq lloq*multiplier","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/ftrans_blq_linear.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Forward transformation for linear BLQ data — ftrans_blq_linear","text":"ftrans_blq_log(): Log-scale transformation","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a geometric coefficient of variation. — gcv","title":"Calculate a geometric coefficient of variation. — gcv","text":"Calculate geometric coefficient variation.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a geometric coefficient of variation. — gcv","text":"","code":"gcv(x, na.rm = F, neg.rm = F)"},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a geometric coefficient of variation. — gcv","text":"x vector. na.rm Flag removing NA values (defaults FALSE). neg.rm Flag removing negative zero values (defaults FALSE).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a geometric coefficient of variation. — gcv","text":"geometric coefficient variation input vector. neg.rm FALSE values <= 0 present, NA returned.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a geometric coefficient of variation. — gcv","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a geometric coefficient of variation. — gcv","text":"","code":"if (FALSE) { # \\dontrun{  gcv(myvector) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"equation used : 100*sqrt(exp(gvar)-1)","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"","code":"gcv_convert(gvar = gsd^2, gsd)"},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"gvar geometric variance (note variance vector values compute gcv ) gsd geometric standard deviation","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"Geometric coefficient variation","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"http://onbiostatistics.blogspot.com/2008/07/geometric-statistics-geometric-cv-vs.html","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"Bill Denney","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gcv_convert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert geometric variance or standard deviation to a geometric coefficient of variation — gcv_convert","text":"","code":"gcv_convert(0.2) #> [1] 47.05345 gcv_convert(gsd=0.2) #> [1] 20.20168"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"Calculate area curve (AUC) subject time interval dependent variables (dv) using trapezoidal rule.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"","code":"get_auc(data, time = \"TIME\", id = \"ID\", dv = \"DV\")"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"data data frame. time string containing name chronologically ordered time variable data. id string containing name ID column (defining subject level data) data. dv string containing name dependent variable column data.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"data frame containing one AUC value every subject defined id. Based AUC function originally written Leonid Gibiansky package MIfuns 5.1, Metrum Institute.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"https://code.google.com/archive/p/mifuns/","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"Leonid Gibiansky, lgibiansky@quantpharm.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the area under the curve (AUC) for each subject over the time interval for dependent variables (dv) using the trapezoidal rule. — get_auc","text":"","code":"if (FALSE) { # \\dontrun{  AUCs <- get_auc(myAUCdata) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_est_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","title":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","text":"Create table model parameter estimates NONMEM output object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_est_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","text":"","code":"get_est_table(   x,   thetaLabels = c(),   omegaLabels = c(),   sigmaLabels = c(),   sigdig = 3 )"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_est_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","text":"x NONMEM output object generated using read_nm. thetaLabels vector containing labels THETA parameters. omegaLabels vector containing labels OMEGA parameters. sigmaLabels vector containing labels SIGMA parameters. sigdig desired number significant digits display.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_est_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","text":"named vector NONMEM model parameter estimates.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/get_est_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_est_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table of model parameter estimates from a NONMEM output object. — get_est_table","text":"","code":"if (FALSE) { # \\dontrun{  nmOutput <- read_nm(\"run315.xml\")  estTab   <- get_est_table(nmOutput) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variability parameter estimates from a NONMEM output object. — get_omega","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"Extract variability parameter estimates NONMEM output object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"","code":"get_omega(x, output = \"est\", sigdig = 6, sep = \"-\", est.step = NULL)"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"x NONMEM output object generated using read_nm. output flag specifying matrix matrices output. Valid flag values est (default), se, rse, cor, cse, 95ci, . sigdig Specifies number significant digits provided (default=6). sep Specifies separator character use 95% confidence intervals (default=\"-\"). est.step Specifies estimation step return parameters (default last).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"symmetrical matrix, list symmetrical matrices specified.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"Output options follows: est returns estimated OMEGA variance-covariance matrix. se returns standard errors estimated OMEGA variance-covariance matrix. rse returns relative standard errors estimated OMEGA variance-covariance matrix (se/est*100). cor returns correlation matrix matrix. cse returns standard errors correlation matrix. 95ci returns asymptotic 95% confidence intervals elements OMEGA variance-covariance matrix (est +/- 1.96*se). returns available OMEGA matrices.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_omega.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract variability parameter estimates from a NONMEM output object. — get_omega","text":"","code":"if (FALSE) { # \\dontrun{  nmOutput  <- read_nm(\"run315.xml\")  omegas    <- get_omega(nmOutput)  omegaRSEs <- get_omega(nmOutput, \"rse\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_probinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract problem and estimation information from a NONMEM output object. — get_probinfo","title":"Extract problem and estimation information from a NONMEM output object. — get_probinfo","text":"Extract problem estimation information NONMEM output object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_probinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract problem and estimation information from a NONMEM output object. — get_probinfo","text":"","code":"get_probinfo(x, sigdig = 6, est.step = NULL)"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_probinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract problem and estimation information from a NONMEM output object. — get_probinfo","text":"x NONMEM output object generated using read_nm. sigdig Specifies number significant digits provided (default=6). est.step Specifies estimation step return parameters (default last).","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/get_probinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract problem and estimation information from a NONMEM output object. — get_probinfo","text":"","code":"if (FALSE) { # \\dontrun{  nmOutput <- read_nm(\"run315.xml\")  probInfo <- get_probinfo(nmOutput) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_shrinkage.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","title":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","text":"Extract shrinkage estimates NONMEM output object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_shrinkage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","text":"","code":"get_shrinkage(x, output = \"eta\", type = \"sd\", sigdig = 3, est.step = NULL)"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_shrinkage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","text":"x NONMEM output object generated using read_nm. output flag specifying shrinkage estimates output. Valid flag values eta (default), epsilon, . type Specifies type shrinkage report. Valid values sd (standard deviation, default) vr (variance, present XML output). sigdig Specifies number significant digits provided (default=3). est.step Specifies estimation step return parameters (default last).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_shrinkage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","text":"named vector NONMEM shrinkage estimates, case , list named vectors. eta returns vector ETA shrinkages, reported NONMEM. epsilon returns EPSILON shrinkage, reported NONMEM. returns ETA EPSILON shrinkage estimates list vectors.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/get_shrinkage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_shrinkage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract shrinkage estimates from a NONMEM output object. — get_shrinkage","text":"","code":"if (FALSE) { # \\dontrun{  nmOutput <- read_nm(\"run315.xml\")  shr <- get_shrinkage(nmOutput, output=\"all\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"Extract residual variability parameter estimates NONMEM output object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"","code":"get_sigma(x, output = \"est\", sigdig = 6, sep = \"-\", est.step = NULL)"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"x NONMEM output object generated using read_nm. output flag specifying matrix matrices output. Valid flag values est (default), se, rse, cor, cse, 95ci, . sigdig Specifies number significant digits provided (default=6). sep Specifies separator character use 95% confidence intervals (default=\"-\"). est.step Specifies estimation step return parameters (default last).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"symmetrical matrix, list symmetrical matrices specified.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"Output options follows: est returns estimated SIGMA variance-covariance matrix. se returns standard errors estimated SIGMA variance-covariance matrix. rse returns relative standard errors estimated SIGMA variance-covariance matrix (se/est*100). cor returns correlation matrix matrix. cse returns standard errors correlation matrix. 95ci returns asymptotic 95% confidence intervals elements SIGMA variance-covariance matrix (est +/- 1.96*se). returns available SIGMA matrices.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residual variability parameter estimates from a NONMEM output object. — get_sigma","text":"","code":"if (FALSE) { # \\dontrun{  nmOutput <- read_nm(\"run315.xml\")  sigmas   <- get_sigma(nmOutput)  sigmaRSEs <- get_sigma(nmOutput, \"rse\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"Extract structural model parameter estimates associated information NONMEM output object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"","code":"get_theta(x, output = \"est\", sigdig = 6, sep = \"-\", est.step = NULL)"},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"x NONMEM output object generated using read_nm. output flag specifying matrix matrices output. Valid flag values est (default), se, rse, 95ci, . sigdig Specifies number significant digits provided (default=6). sep Specifies separator character use 95% confidence intervals (default=\"-\"). est.step Specifies estimation step return parameters (default last).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"named vector NONMEM model parameter estimates, case , list named vectors.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"Output options follows: est returns vector THETA values. se returns vector THETA standard errors. rse returns vector THETA relative standard errors (se/est*100). 95ci returns vector asymptotic 95% confidence intervals elements THETA (est +/- 1.96*se). returns available THETA information list named vectors.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/get_theta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract structural model parameter estimates and associated information from a NONMEM output object. — get_theta","text":"","code":"if (FALSE) { # \\dontrun{  nmOutput <- read_nm(\"run315.xml\")  thetas <- get_theta(nmOutput) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/gm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate geometric mean — gm","title":"Calculate geometric mean — gm","text":"Calculate geometric mean","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate geometric mean — gm","text":"","code":"gm(x, na.rm = FALSE, neg.rm = FALSE)"},{"path":"https://kestrel99.github.io/pmxTools/reference/gm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate geometric mean — gm","text":"x Numeric vector. na.rm Flag removing NA values (defaults FALSE). neg.rm Flag removing negative zero values (defaults FALSE).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate geometric mean — gm","text":"geometric mean. NA returned non-positive elements x.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate geometric mean — gm","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/gm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate geometric mean — gm","text":"","code":"gm(c(0.5, 7, 8, 5)) #> [1] 3.439791"},{"path":"https://kestrel99.github.io/pmxTools/reference/itrans_blq_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse transformation for linear BLQ data — itrans_blq_linear","title":"Inverse transformation for linear BLQ data — itrans_blq_linear","text":"ggplot2 scales.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/itrans_blq_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse transformation for linear BLQ data — itrans_blq_linear","text":"","code":"itrans_blq_linear(lloq)  itrans_blq_log(lloq, base)"},{"path":"https://kestrel99.github.io/pmxTools/reference/itrans_blq_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse transformation for linear BLQ data — itrans_blq_linear","text":"lloq value lower limit quantification numeric scalar base base logarithm","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/itrans_blq_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse transformation for linear BLQ data — itrans_blq_linear","text":"function x replaces x < lloq lloq","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/itrans_blq_linear.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Inverse transformation for linear BLQ data — itrans_blq_linear","text":"itrans_blq_log(): Log-scale inverse transform","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/label_blq.html","id":null,"dir":"Reference","previous_headings":"","what":"Label axes with censoring labels for BLQ — label_blq","title":"Label axes with censoring labels for BLQ — label_blq","text":"ggplot2 scales.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/label_blq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label axes with censoring labels for BLQ — label_blq","text":"","code":"label_blq(lloq, lloq_text)"},{"path":"https://kestrel99.github.io/pmxTools/reference/label_blq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label axes with censoring labels for BLQ — label_blq","text":"lloq value lower limit quantification numeric scalar lloq_text text use axis indicate values <   lloq.  automatically set paste0(\"<\", lloq) missing.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/label_blq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label axes with censoring labels for BLQ — label_blq","text":"function x returns formatted values.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/pcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate percentage coefficient of variation — pcv","title":"Calculate percentage coefficient of variation — pcv","text":"Calculate percentage coefficient variation","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate percentage coefficient of variation — pcv","text":"","code":"pcv(x, na.rm = FALSE)"},{"path":"https://kestrel99.github.io/pmxTools/reference/pcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate percentage coefficient of variation — pcv","text":"x Numeric vector. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate percentage coefficient of variation — pcv","text":"percentage coefficient variation.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate percentage coefficient of variation — pcv","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate percentage coefficient of variation — pcv","text":"","code":"pcv(rnorm(50, 5, 7.56)) #> [1] 151.9669"},{"path":"https://kestrel99.github.io/pmxTools/reference/pk_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide concentration-time curves. — pk_curve","title":"Provide concentration-time curves. — pk_curve","text":"Provide concentration-time curves.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pk_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide concentration-time curves. — pk_curve","text":"","code":"pk_curve(   t,   model = \"1cmt_oral\",   params = list(ka = 2.77, CL = 2.5, V = 25),   dose = 600,   ii = 24,   addl = 0,   ss = F )"},{"path":"https://kestrel99.github.io/pmxTools/reference/pk_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide concentration-time curves. — pk_curve","text":"t Observation time h, specified vector. model model use. Must one \"1cmt_bolus\", \"1cmt_infusion\", \"1cmt_oral\", \"2cmt_bolus\", \"2cmt_infusion\", \"2cmt_oral\", \"3cmt_bolus\", \"3cmt_infusion\", \"3cmt_oral\". default \"1cmt_oral\". params named list containing parameter values selected model type. dose Dose amount. ii Interdose interval (tau), hours (default 24). addl Number additional doses (default 0). ss Assume steady state concentration (default FALSE).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pk_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide concentration-time curves. — pk_curve","text":"data frame containing times (t) concentrations (cp).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pk_curve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Provide concentration-time curves. — pk_curve","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/pk_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide concentration-time curves. — pk_curve","text":"","code":"plot(pk_curve(t=seq(0,72,by=0.1), model=\"3cmt_oral\", ii=12, addl=5,   params=list(CL=2.5, V1=25, V2=2, V3=5, Q2=0.5, Q3=0.25, ka=1)), type=\"l\")"},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","title":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","text":"Plot distribution hybrid containing halfeye, boxplot jittered points.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","text":"","code":"plot_dist(   dat,   yvar,   xvar = NULL,   ylim = NULL,   xlb = \"\",   ylb = \"\",   identity_line = FALSE,   identity_value = 0,   he_adjust = 0.5,   he_width = 0.6,   he_justification = -0.2,   he_col = \"black\",   he_fill = \"#F8766D\",   he_alpha = 0.9,   he_slab_type = \"pdf\",   he_breaks = \"Sturges\",   he_outline_bars = FALSE,   he_point_interval = \"median_qi\",   he_point_alpha = 0.9,   he_point_fill = \"#F8766D\",   he_point_colour = \"#F8766D\",   he_point_size = 2,   bxp_width = 0.12,   bxp_outlier_col = NA,   bxp_outlier_fill = NA,   bxp_outlier_shape = 19,   bxp_outlier_size = 1.5,   bxp_col = \"black\",   bxp_fill = \"#F8766D\",   bxp_alpha = 0.9,   bxp_notch = FALSE,   bxp_notchwidth = 0.5,   hp_alpha = 0.25,   hp_col = \"#F8766D\",   hp_size = 1,   hp_shape = 16,   na.rm = FALSE )"},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","text":"dat data frame. yvar name field containing values plotted. xvar name field containing grouping variable (defaults NULL). ylim Limits y-axis. Defaults NULL. provided, 2-element vector containing upper lower limits. xlb Label x-axis. ylb Label y-axis. identity_line Show line identity? Default FALSE. identity_value identity line shown, drawn horizontally y-value (default 0). he_adjust he_slab_type \"pdf\", bandwidth density estimator adjusted multiplying value. he_width Width halfeye component plot (default 0.6). he_justification Justification halfeye component plot (default -0.2). he_col Color halfeye component plot. he_fill Fill color halfeye component plot. he_alpha Alpha halfeye component plot (default 0.9). he_slab_type type slab function calculate halfeye component plot: probability density (mass) function (\"pdf\", default), cumulative distribution function (\"cdf\"), complementary CDF (\"ccdf\") histogram (\"histogram\"). he_breaks slab_type \"histogram\", breaks parameter passed hist() determine put breaks histogram. he_outline_bars slab_type \"histogram\", determines outlines bars drawn slab_color aesthetic used. FALSE (default), outline drawn along tops bars; TRUE, outlines bars also drawn. he_point_interval function ggdist::point_interval family (e.g., median_qi, mean_qi, mode_hdi, etc), string giving name function family (e.g., \"median_qi\", \"mean_qi\", \"mode_hdi\", etc. function determines point summary (typically mean, median, mode) interval type (quantile interval, qi; highest-density interval, hdi; highest-density continuous interval, hdci). Output converted appropriate x- y-based aesthetics depending value orientation. he_point_alpha Alpha point. he_point_fill Fill colour point. he_point_colour Colour point. he_point_size Size point. bxp_width Width boxplot component (default 0.12). bxp_outlier_col Color outliers boxplot component. bxp_outlier_fill Fill color outliers boxplot component. bxp_outlier_shape Shape outliers boxplot component. bxp_outlier_size Size outliers boxplot component. bxp_col Color boxplot component. bxp_fill Fill color boxplot component. bxp_alpha Alpha boxplot component. bxp_notch FALSE (default) make standard box plot. TRUE, make notched box plot. Notches used compare groups; notches two boxes overlap, suggests medians significantly different. bxp_notchwidth notched box plot, width notch relative body (default 0.5). hp_alpha Alpha jitter. hp_col Color jitter. hp_size Size jitter. hp_shape Shape jitter. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","text":"plot containing jittered points, boxplot density plot histogram illustrating distribution every group data evaluation.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a distribution as a hybrid containing a halfeye, a boxplot and jittered points. — plot_dist","text":"","code":"if (FALSE) { # \\dontrun{  plot_dist(dat, \"ETA1\", identity_line = T, he_slab_type = \"histogram\", he_breaks = 30) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_nmprogress.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","title":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","text":"plot_nmprogress returns plot set plots showing evolution parameter estimates iteration.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_nmprogress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","text":"","code":"plot_nmprogress(   fileName,   fileExt = \".lst\",   metric = \"perc\",   lineCol = \"#902C10\",   idlineCol = \"black\" )"},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_nmprogress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","text":"fileName NONMEM output file prefix, without extension (e.g. 'run315'). fileExt file extension NONMEM output, set '.lst' default. metric show plot. Allowed options 'est' (actual estimate) 'perc' (percentage change estimated OFV since estimation began). Default 'perc'. lineCol Line color. Default '#902C10'. idlineCol Identity line color (used 'perc' metric selected). Default black.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_nmprogress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","text":"set plots.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_nmprogress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_nmprogress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot NONMEM parameter estimation by iteration. — plot_nmprogress","text":"","code":"if (FALSE) { # \\dontrun{ plot_nmprogress(\"run315\") plot_nmprogress(\"run315\", \".nmlst\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize PsN SCM output. — plot_scm","title":"Visualize PsN SCM output. — plot_scm","text":"plot_scm returns visualization Perl-speaks-NONMEM (PsN, https://uupharmacometrics.github.io/PsN/) SCM (stepwise covariate modeling) procedure. depends presence scmlog.txt short_scmlog.txt files specified directory.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize PsN SCM output. — plot_scm","text":"","code":"plot_scm(   dir,   startPhase = \"forward\",   fwdSuccessCol = \"#66C2A5\",   fwdFailCol = \"black\",   bwdSuccessCol = \"#FC8D62\",   bwdFailCol = \"black\",   defCol = \"black\",   fwdSuccessFillCol = \"#B3E2CD\",   fwdFailFillCol = \"white\",   bwdSuccessFillCol = \"#FDCDAC\",   bwdFailFillCol = \"white\",   defFillCol = \"white\",   fwdSuccessFontCol = \"black\",   fwdFailFontCol = \"black\",   bwdSuccessFontCol = \"black\",   bwdFailFontCol = \"black\",   defFontCol = \"black\",   fullFwdCol = \"#8DA0CB\",   finalCol = \"#E78AC3\",   fullFwdFillCol = \"#CBD5E8\",   finalFillCol = \"#F4CAE4\",   fullFwdFontCol = \"black\",   finalFontCol = \"black\",   fullFwdWidth = \"2px\",   finalWidth = \"2px\",   defWidth = \"1px\",   nodeStyle = \"filled,rounded\",   nodeShape = \"box\",   fontname = \"helvetica\",   rankdir = \"TB\",   layout = \"dot\",   lookupDF = NULL,   ... )"},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize PsN SCM output. — plot_scm","text":"dir PsN SCM folder (containing scmlog.txt short_scmlog.txt). startPhase start collating output; can \"forward\" (default) \"backward\". fwdSuccessCol Node outline color model fit matching forward inclusion criterion. fwdFailCol Node outline color model fit matching forward inclusion criterion. bwdSuccessCol Node outline color model fit matching backward elimination criterion. bwdFailCol Node outline color model fit matching backward elimination criterion. defCol Default node outline color. fwdSuccessFillCol Node fill color model fit matching forward inclusion criterion. fwdFailFillCol Node fill color model fit matching forward inclusion criterion. bwdSuccessFillCol Node fill color model fit matching backward elimination criterion. bwdFailFillCol Node fill color model fit matching backward elimination criterion. defFillCol Default node fill color. fwdSuccessFontCol Node font color model fit matching forward inclusion criterion. fwdFailFontCol Node font color model fit matching forward inclusion criterion. bwdSuccessFontCol Node font color model fit matching backward elimination criterion. bwdFailFontCol Node font color model fit matching backward elimination criterion. defFontCol Default node font color. fullFwdCol Node outline color full forward model (.e. final model backward elimination procedure SCM). finalCol Node outline color final reduced model (.e. final model reached backward elimination procedure SCM). fullFwdFillCol Node fill color full forward model (.e. final model backward elimination procedure SCM). finalFillCol Node fill color final reduced model (.e. final model reached backward elimination procedure SCM). fullFwdFontCol Node font color full forward model (.e. final model backward elimination procedure SCM). finalFontCol Node font color final reduced model (.e. final model reached backward elimination procedure SCM). fullFwdWidth Node outline width full forward model (.e. final model backward elimination procedure SCM). finalWidth Node outline width final reduced model (.e. final model reached backward elimination procedure SCM). defWidth Default node outline width. nodeStyle Node style. string containing comma-separated list options (include \"filled\", \"striped\", \"wedged\", \"diagonals\" \"rounded\"). See GraphViz documentation details. nodeShape Node shape. Options include \"box\" (default), \"oval\", \"diamond\", \"egg\", \"plaintext\", \"point\", \"square\", \"triangle\" many . See GraphViz documentation details. fontname Font nodes. Options depend heavily local system - see GraphViz documentation details. rankdir Direction graph layout. Possible values \"TB\" (default), \"LR\", \"BT\", \"RL\", corresponding directed graphs drawn top bottom, left right, bottom top, right left, respectively. layout Graph layout. Possible values \"dot\" (default), \"neato\", \"twopi\", \"circo\". Note , \"dot\" easiest interpret others may produce odd results. lookupDF data frame containing lookup table node labels. default, function use PSN model names. lookup table containing fields Model Alias provided, model names Model replaced output plots attaching labels Alias. ... Additional parameters passed underlying SetNodeStyle SetEdgeStyle functions, turn rely DiagrammeR.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize PsN SCM output. — plot_scm","text":"grViz object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize PsN SCM output. — plot_scm","text":"function parses PsN SCM output displays GraphViz graph (effectively, HTML widget). built plot.Node - please refer documentation function detailed overview possible (lot). specific details, see http://rich-iannone.github.io/DiagrammeR/docs.html.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualize PsN SCM output. — plot_scm","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/plot_scm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize PsN SCM output. — plot_scm","text":"","code":"if (FALSE) { # \\dontrun{ scm <- plot_scm(\"E:/DrugX/ModelDevelopment/scm310\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/pmxTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pmxTools: Pharmacometric and Pharmacokinetic Toolkit — pmxTools-package","title":"pmxTools: Pharmacometric and Pharmacokinetic Toolkit — pmxTools-package","text":"Pharmacometric tools common data analytical tasks; closed-form solutions calculating concentrations given times dosing based compartmental PK models (1-compartment, 2-compartment 3-compartment, covering infusions, zero- first-order absorption, lag times, single doses steady state, per Bertrand & Mentre (2008) http://lixoft.com/wp-content/uploads/2016/03/PKPDlibrary.pdf); parametric simulation NONMEM-generated parameter estimates output; parsing, tabulating plotting results generated Perl-speaks-NONMEM (PsN).","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/pmxTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pmxTools: Pharmacometric and Pharmacokinetic Toolkit — pmxTools-package","text":"Maintainer: Justin Wilkins justin.wilkins@occams.com (ORCID) Authors: Bill Denney wdenney@humanpredictions.com (ORCID) Rik Schoemaker rik.schoemaker@occams.com contributors: Satyaprakash Nayak sn248@cornell.edu [contributor] Leonid Gibiansky lgibiansky@quantpharm.com [contributor] Andrew Hooker Andrew.Hooker@farmbio.uu.se [contributor] E. Niclas Jonsson niclas.jonsson@pharmetheus.com [contributor] Mats O. Karlsson mats.karlsson@farmbio.uu.se [contributor] John Johnson johndjohnson@gmail.com [contributor]","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NONMEM 7.2+ output into a list of lists. — read_nm","title":"Read NONMEM 7.2+ output into a list of lists. — read_nm","text":"Read NONMEM 7.2+ output list lists.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NONMEM 7.2+ output into a list of lists. — read_nm","text":"","code":"read_nm(fileName, directory = NULL, quiet = FALSE, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NONMEM 7.2+ output into a list of lists. — read_nm","text":"fileName NONMEM XML output file (e.g. \"run315.xml\"). directory directory look files within.  NULL, uses current directory. quiet Flag displaying intermediate output. ... Passed read functions (ignored functions).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NONMEM 7.2+ output into a list of lists. — read_nm","text":"list lists corresponding NONMEM output object.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read NONMEM 7.2+ output into a list of lists. — read_nm","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read NONMEM 7.2+ output into a list of lists. — read_nm","text":"","code":"if (FALSE) { # \\dontrun{ nmOutput <- read_nm(\"run315.xml\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all NONMEM files for a single NONMEM run. — read_nm_all","title":"Read all NONMEM files for a single NONMEM run. — read_nm_all","text":"Read NONMEM files single NONMEM run.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all NONMEM files for a single NONMEM run. — read_nm_all","text":"","code":"read_nm_all(runNo, run_prefix = \"run\", directory = NULL, quiet = FALSE, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all NONMEM files for a single NONMEM run. — read_nm_all","text":"runNo Run number. run_prefix start name run. directory directory look files within.  NULL, uses current directory. quiet Flag displaying intermediate output. ... Passed read functions (ignored functions).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read all NONMEM files for a single NONMEM run. — read_nm_all","text":"filename loading constructed paste(run_prefix,   runNo).  load nonstandard file, simply set one values NULL.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_multi_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","title":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","text":"Read (single ) multiple NONMEM tables single file","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_multi_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","text":"","code":"read_nm_multi_table(   fileName,   header = TRUE,   ...,   simplify = TRUE,   table_start_pattern = \"^TABLE NO\" )"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_multi_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","text":"fileName filename read header, ... Arguments passed read.table simplify single table present, return data.frame instead list data.frames? table_start_pattern found start new table?","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_multi_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","text":"list data.frames, one present simplify=TRUE, data.frame.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_multi_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","text":"Bill Denney","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_multi_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read (single or) multiple NONMEM tables from a single file — read_nm_multi_table","text":"","code":"if (FALSE) { # \\dontrun{ read_nm_multi_table(\"run1.cov\", row.names=1) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_std_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a standard NONMEM extension file — read_nm_std_ext","title":"Read a standard NONMEM extension file — read_nm_std_ext","text":"Read standard NONMEM extension file","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_std_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a standard NONMEM extension file — read_nm_std_ext","text":"","code":"read_nm_std_ext(fileName, extension, directory = NULL, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_std_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a standard NONMEM extension file — read_nm_std_ext","text":"fileName filename (directory name, applicable) read (without extension) extension file extension optionally append (preferably starting \".\") directory directory look files within.  NULL, uses current directory. ... Passed read_nm_multi_table()","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_std_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a standard NONMEM extension file — read_nm_std_ext","text":"NULL file exist value read_nm_multi_table() exist.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nm_std_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a standard NONMEM extension file — read_nm_std_ext","text":"","code":"if (FALSE) { # \\dontrun{ read_nm_std_ext(\"run1\", \"phi\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in the NONMEM variance-covariance matrix. — read_nmcov","title":"Read in the NONMEM variance-covariance matrix. — read_nmcov","text":"Read NONMEM variance-covariance matrix.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in the NONMEM variance-covariance matrix. — read_nmcov","text":"","code":"read_nmcov(fileName, quiet = FALSE, directory = NULL, ...)"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in the NONMEM variance-covariance matrix. — read_nmcov","text":"fileName Root filename NONMEM run (e.g. \"run315\"). function reads \".cov\" NONMEM output table, return error missing. quiet Flag displaying intermediate output. directory directory look files within.  NULL, uses current directory. ... Passed read functions (ignored functions).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in the NONMEM variance-covariance matrix. — read_nmcov","text":"symmetrical variance-covariance matrix covering model parameters.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmcov.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read in the NONMEM variance-covariance matrix. — read_nmcov","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in the NONMEM variance-covariance matrix. — read_nmcov","text":"","code":"if (FALSE) { # \\dontrun{ nmVcov <- read_nmcov(\"run315\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmext.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NONMEM output into a list. — read_nmext","title":"Read NONMEM output into a list. — read_nmext","text":"read_nmext returns summary given NONMEM run, including termination messages, parameter estimates, precision estimates. Minimally, NONMEM output '.ext' files must available.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NONMEM output into a list. — read_nmext","text":"","code":"read_nmext(   fileName,   fileExt = \".lst\",   directory = NULL,   quiet = FALSE,   estNo = NULL,   ... )"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NONMEM output into a list. — read_nmext","text":"fileName NONMEM output file prefix, without extension (e.g. \"run315\"). fileExt file extension NONMEM output, set \".lst\" default. directory directory look files within.  NULL, uses current directory. quiet Flag displaying intermediate output. estNo estimation number report (default, one estimation step present, reported; multiple reported, last reported default). ... Passed read functions (ignored functions).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NONMEM output into a list. — read_nmext","text":"list lists, containing 'Termination' (summary NONMEM's termination output, including shrinkages ETABAR estimates), 'OFV' (objective function value), 'Thetas' (vector structural parameter estimates, THETAs), 'Omega', list lists containing OMEGA matrix, 'Sigma', list lists containing SIGMA matrix, 'seThetas', vector standard errors THETAs, 'seOmega', list lists containing standard errors OMEGA matrix, 'seSigma', list lists containing standard errors SIGMA matrix.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmext.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read NONMEM output into a list. — read_nmext","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read NONMEM output into a list. — read_nmext","text":"","code":"if (FALSE) { # \\dontrun{ read_nmext(\"run315\") read_nmext(\"run315\", \".nmlst\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads NONMEM output tables. — read_nmtables","title":"Reads NONMEM output tables. — read_nmtables","text":"Reads NONMEM output tables.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads NONMEM output tables. — read_nmtables","text":"","code":"read_nmtables(   tableFiles = NULL,   runNo = NULL,   tabSuffix = \"\",   tableNames = c(\"sdtab\", \"mutab\", \"patab\", \"catab\", \"cotab\", \"mytab\", \"extra\", \"xptab\"),   quiet = FALSE,   directory = NULL,   output_type = c(\"data.frame\", \"list\"),   ... )"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads NONMEM output tables. — read_nmtables","text":"tableFiles NONMEM table files read. runNo Run number. tabSuffix Table file suffix. tableNames List root table names, using Xpose naming convention default. quiet Flag displaying intermediate output. directory directory look files within.  NULL, uses current directory. output_type output \"data.frame\" results merged \"list\" data.frames. ... Passed read functions (ignored functions).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads NONMEM output tables. — read_nmtables","text":"data.frame list data.frames depending output_type argument.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reads NONMEM output tables. — read_nmtables","text":"Adapted Xpose 4 (https://CRAN.R-project.org/package=xpose4).","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Reads NONMEM output tables. — read_nmtables","text":"NONMEM (https://www.iconplc.com/innovation/nonmem/) Jonsson EN, Karlsson MO. Xpose–S-PLUS based population pharmacokinetic/pharmacodynamic model building aid NONMEM. Comput Methods Programs Biomed. 1999 Jan;58(1):51-64","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads NONMEM output tables. — read_nmtables","text":"Bill Denney, Justin Wilkins, Niclas Jonsson, Andrew Hooker","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_nmtables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads NONMEM output tables. — read_nmtables","text":"","code":"if (FALSE) { # \\dontrun{ tables <- read_nmtables(runNo=315) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_scm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PsN SCM output into a format suitable for further use. — read_scm","title":"Read PsN SCM output into a format suitable for further use. — read_scm","text":"read_scm returns summary Perl-speaks-NONMEM (PsN, https://uupharmacometrics.github.io/PsN/) SCM (stepwise covariate modeling) procedure. depends presence scmlog.txt short_scmlog.txt files specified directory.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_scm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PsN SCM output into a format suitable for further use. — read_scm","text":"","code":"read_scm(dir, startPhase = \"forward\")"},{"path":"https://kestrel99.github.io/pmxTools/reference/read_scm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PsN SCM output into a format suitable for further use. — read_scm","text":"dir PsN SCM folder (containing scmlog.txt short_scmlog.txt). startPhase start collating output; can \"forward\" (default) \"backward\".","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_scm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PsN SCM output into a format suitable for further use. — read_scm","text":"list data frames, containing forward models evaluated forward inclusion step covariate model building forwardSummary covariate relationships selected forward step forwardP P-value used inclusion forward inclusion step backward models evaluated backward elimination step covariate model building backwardSummary covariate relationships eliminated backward step backwardP P-value used exclusion backward elimination step","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/read_scm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read PsN SCM output into a format suitable for further use. — read_scm","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/read_scm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PsN SCM output into a format suitable for further use. — read_scm","text":"","code":"if (FALSE) { # \\dontrun{ scm <- read_scm(\"E:/DrugX/ModelDevelopment/scm310\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NONMEM 7.2+ output into an R object. — rnm","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"Read NONMEM 7.2+ output R object.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"","code":"rnm(   index,   prefix = \"run\",   pathNM,   ndig = 3,   ndigB = 3,   ndigP = 1,   Pci = 95,   ext = \".lst\",   extmod = \".mod\",   Pvalues = TRUE,   RawCI = FALSE,   ... )"},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"index NONMEM model index, .e. numeric part filename assuming follows convention 'run123.mod'. prefix NONMEM model prefix, assuming follows convention 'run123.mod'. default \"run\". pathNM path NONMEM output. contain trailing slash. ndig Number significant digits use. default 3. ndigB Number significant digits use. default 3. ndigP Number digits decimal point use percentages. default 1. Pci Asymptotic confidence interval apply reporting parameter uncertainty. default 95. ext NONMEM output file extension. default \".lst\". extmod NONMEM control stream file extension. default \"mod\". Pvalues Report P-values parameters? default TRUE. RawCI Report confidence intervals without estimate? default FALSE. ... Additional arguments.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"list containing information extracted NONMEM output.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"output list composed following objects: Theta: data frame describing structural (fixed-effect) parameters, containing parameter name, estimated value, standard error (SE), coefficient variation (CV), lower upper confidence limits (CIL CIU, based Pci), P-value, calculated 2\\*(1-pnorm(abs(theta/theta.se))). Eta: data frame describing interindividual random-effects parameters, containing estimated value, standard error (SE), coefficient variation (CV, calculated abs(100*(SE/OMEGA))), coefficient variation (EtaCV, calculated 100*sqrt(OMEGA)), shrinkage. Epsilon: data frame describing residual random-effects parameters, containing estimated value, standard error (SE), coefficient variation (CV, calculated abs(100*(SE/OMEGA))), coefficient variation (EtaCV, calculated 100*sqrt(SIGMA)), shrinkage. CorTheta: data frame containing correlation matrix fixed effects (THETA). CorOmega: data frame containing correlation matrix interindividual random effects (OMEGA). CorSigma: data frame containing correlation matrix residual random effects (SIGMA). OmegaMatrix: data frame containing OMEGA matrix. SigmaMatrix: data frame containing SIGMA matrix. CovMatrixTheta: data frame containing variance-covariance matrix structural parameters (THETA). CovMatrix: data frame containing complete variance-covariance matrix. OFV: objective function value. ThetaString: data frame containing relevant fixed-effects parameter information, suitable use table parameter estimates. Contains parameter name, estimate, standard error, coefficient variation, combined estimate asymptotic confidence interval, P-value. EtaString: data frame containing relevant interindivudal random-effects parameter information, suitable use table parameter estimates. Contains parameter name, estimate (variance), standard error, coefficient variation, percentage value (calculated 100*sqrt(OMEGA)), shrinkage. EpsString: data frame containing relevant residual random-effects parameter information, suitable use table parameter estimates. Contains parameter name, estimate (variance), standard error, coefficient variation, percentage value (calculated 100*sqrt(SIGMA)), shrinkage. RunTime: Run time. ConditionN: Condition number.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"Rik Schoemaker, rik.schoemaker@occams.com Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/rnm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read NONMEM 7.2+ output into an R object. — rnm","text":"","code":"if (FALSE) { # \\dontrun{ nmOutput <- rnm(\"run315.lst\") } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","title":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","text":"Sample multivariate normal distribution using OMEGA variance-covariance matrix generate new sets simulated ETAs NONMEM output.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","text":"","code":"sample_omega(nmRun, n, seed)"},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","text":"nmRun Root filename NONMEM run (e.g. \"run315\"). n Number samples required. seed Random seed.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","text":"data frame containing n samples multivariate normal distribution, using estimated NONMEM OMEGA variance-covariance matrix. provides n sets ETA estimates suitable simulation new patients.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_omega.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_omega.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from the multivariate normal distribution using the OMEGA variance-covariance matrix to generate new sets of simulated ETAs from NONMEM output. — sample_omega","text":"","code":"if (FALSE) { # \\dontrun{  omDist <- sample_omega(\"run315\", 5000, seed=740727) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","title":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","text":"Sample multivariate normal distribution using SIGMA variance-covariance matrix generate new sets simulated EPSILONs NONMEM output.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","text":"","code":"sample_sigma(nmRun, n, seed)"},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","text":"nmRun Root filename NONMEM run (e.g. \"run315\"). n Number samples required. seed Random seed.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","text":"data frame containing n samples multivariate normal distribution, using estimated NONMEM SIGMA variance-covariance matrix. provides n sets EPSILON estimates suitable simulation new datasets.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_sigma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from the multivariate normal distribution using the SIGMA variance-covariance matrix to generate new sets of simulated EPSILONs from NONMEM output. — sample_sigma","text":"","code":"if (FALSE) { # \\dontrun{  sigDist <- sample_sigma(\"run315\", 5000, seed=740727) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_uncert.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","title":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","text":"Sample multivariate normal distribution generate new sets parameters NONMEM output.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_uncert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","text":"","code":"sample_uncert(nmRun, n, seed)"},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_uncert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","text":"nmRun Root filename NONMEM run (e.g. \"run315.xml\"). n Number samples required. seed Random seed.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_uncert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","text":"data frame containing n samples multivariate normal distribution, using NONMEM typical parameter estimates NONMEM variance-covariance matrix (*.cov file). provides n sets parameter estimates sampled uncertainty distribution, suitable simulation model uncertainty.","code":""},{"path":[]},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_uncert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","text":"Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/sample_uncert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from the multivariate normal distribution to generate new sets of parameters from NONMEM output. — sample_uncert","text":"","code":"if (FALSE) { # \\dontrun{  nmMatrix <- sample_uncert(\"run315.xml\", 5000, seed=740727) } # }"},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NONMEM output into a list. — table_rtf","title":"Read NONMEM output into a list. — table_rtf","text":"table_rtf generates RTF table data frame.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NONMEM output into a list. — table_rtf","text":"","code":"table_rtf(   df,   outFile = NULL,   rtfFile = TRUE,   boldHeader = TRUE,   rowNames = FALSE,   ... )"},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NONMEM output into a list. — table_rtf","text":"df data frame. outFile filename writing table . NULL, writes console. rtfFile TRUE (default), add RTF tabs generate fully formatted RTF file. boldHeader TRUE, make header bold. rowNames TRUE, include row names table. Default FALSE. ... formatting options table body.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NONMEM output into a list. — table_rtf","text":"RTF table based data frame provided.","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read NONMEM output into a list. — table_rtf","text":"https://www.r-bloggers.com/2008/10/another-solution---r--word-table-problem/","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read NONMEM output into a list. — table_rtf","text":"John Johnson, johndjohnson@gmail.com","code":""},{"path":"https://kestrel99.github.io/pmxTools/reference/table_rtf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read NONMEM output into a list. — table_rtf","text":"","code":"if (FALSE) { # \\dontrun{ scm <- read_scm(\"E:/DrugX/ModelDevelopment/scm310\") myRTF <- table_rtf(scm$forwardSummary) } # }"},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-15","dir":"Changelog","previous_headings":"","what":"pmxTools 1.5","title":"pmxTools 1.5","text":"plot_dist rewritten adapt ggplot2 4.0.0 changes Dependency gghalves removed Many fixes documentation","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-14","dir":"Changelog","previous_headings":"","what":"pmxTools 1.4","title":"pmxTools 1.4","text":"dgr_table() now provides geometric means default gm() now provides options strip NA values (na.rm) non-positive values (neg.rm) computation.","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-13","dir":"Changelog","previous_headings":"","what":"pmxTools 1.3","title":"pmxTools 1.3","text":"CRAN release: 2023-02-21 Added NCA parameter estimation calc_derived_1cpt(), calc_derived_2cpt() calc_derived_3cpt(), dose required information (e.g. tinf, dur, tau) provided. Added warning flip-flop kinetics potential effects derived half-lives calc_derived_1cpt(), calc_derived_2cpt(), calc_derived_3cpt(). Added blq_trans() blq_log_trans() assistance visualization measurements limit quantification. Added test valid XML read_nm(). Small fixes enhancements read_nmtable_single() read_nm_multi_table() ensure stray text properly handled reading NONMEM output files. count_na() now throws warning NaN values included NA count, indicates many . Changed significant digits functionality 95% confidence intervals get_theta(), get_omega() get_sigma(), functions apply . Replaced gridExtra patchwork. Numerous small fixes. Removed unnecessary dependencies. Added many new unit tests, increasing test coverage considerably.","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-124","dir":"Changelog","previous_headings":"","what":"pmxTools 1.2.4","title":"pmxTools 1.2.4","text":"Fixed minor documentation issues. Thanks Julien Grassot spotting .","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-123","dir":"Changelog","previous_headings":"","what":"pmxTools 1.2.3","title":"pmxTools 1.2.3","text":"CRAN release: 2022-04-06 Fixed another error sample_uncert() still crashing function. Added helper functions count_na(), dgr_table(), gcv(), fmt_signif(). Added distribution plotting function plot_dist().","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-122","dir":"Changelog","previous_headings":"","what":"pmxTools 1.2.2","title":"pmxTools 1.2.2","text":"Fixed error sample_uncert() crashing function.","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-121","dir":"Changelog","previous_headings":"","what":"pmxTools 1.2.1","title":"pmxTools 1.2.1","text":"CRAN release: 2020-08-26 Added vignette describing PK curves. Fixed systematic error calc_sd_1cmt_linear_oral_0_lag(), calc_ss_1cmt_linear_oral_0_lag(), calc_sd_2cmt_linear_oral_0_lag() resulted incorrect curves plotted.","code":""},{"path":"https://kestrel99.github.io/pmxTools/news/index.html","id":"pmxtools-12","dir":"Changelog","previous_headings":"","what":"pmxTools 1.2","title":"pmxTools 1.2","text":"Rewrote plot_scm function produce tree diagrams via DiagrammeR. Fixed rare bug get_auc measurements different individuals erroneously mixed. Amended (added) read_nm(), read_nm_all(), read_nmext(), read_nmcov(), read_nmtables() functions allow reading multiple NONMEM estimation steps. Clarified documentation calc_derived(). Now using xml2 read NONMEM-generated XML files. Fixed partial argument match warnings encountered tests. Add function calculting geometric CV.","code":""}]
